import AutoCard from "@/common/AutoCard";
import FiltersBar from "@/common/FiltersBar";
import Pagination from "@/common/Pagination";
import SideBar from "@/common/SideBar";
import Head from "next/head";
import { useState } from "react";
import Image from "next/image";
import { useGetCarsQuery } from "@/redux/api/apiSlice";

export default function Home() {
  const [page, setPage] = useState(1);
  const { data: response, isFetching, error } = useGetCarsQuery();
  const carsList = response?.data;
  const rst = carsList?.length / 16 - page;

  return (
    <>
      <Head>
        <title>AutoBid</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="mx-auto mt-20 min-h-[70vh] max-w-[1440px] ">
        {isFetching && (
          <p className="pt-6 text-center text-xl">Cargando publicaciones...</p>
        )}

        {(error || carsList?.length === 0) && (
          <p className="pt-6 text-center text-xl text-red-700">
            Por el momento no hay publicaciones disponibles para mostrar
          </p>
        )}

        {carsList?.length > 0 && (
          <>
            <FiltersBar />

            <section className="flex justify-center">
              <div className="= grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4">
                {[...carsList].splice((page - 1) * 16, 16)?.map((car, indx) => (
                  <AutoCard car={car} key={car.model + "-" + indx} />
                ))}
              </div>

              <SideBar
                newListingsCars={[...carsList].splice(
                  0,
                  rst > 0 ? 4 : Math.ceil((1 + rst) * 4)
                )}
              />
            </section>
            <Pagination
              maxLength={Math.ceil(carsList.length / 16)}
              pageStg={[page, setPage]}
            />
          </>
        )}
      </main>
    </>
  );
}
